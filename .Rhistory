require(pacman)
p_load(tidyverse,    #Para limpiar los datos
caret,        #Para la clasificación y regresiones
rio,          #Para importar datos
modelsummary, # msummary
gamlr,
class,
ggplot2,
skimr,
rvest,
dplyr,
stargazer,
gtsummary,
expss,
fastAdaboost,
randomForest,
xgboost,
glmnet,
pROC,
class,
sf,
leaflet,
tmaptools,
osmdata,
skim,
readr) #por ahora llame todas las del problem set 3
predict<- stats::predict  #con esto soluciono el problema de que haya mas de una libreria con este comando
setwd("C:/Users/Camila Cely/Documents/GitHub/tesis_meca")
setwd("C:/Users/Camila Cely/Documents/GitHub/tesis_meca")
db <-readRDS("stores/BASE_TESIS.Rds")
db
summary (db)
require("hdm")
install.packages("hdm")
require("hdm")
dim(db)
View(db)
library(haven)
BASE_TESIS_2907 <- read_dta("DATOS/BASE TESIS 2907.dta")
View(BASE_TESIS_2907)
db <-readRDS("stores/BASE_TESIS.Rds")
View(db)
y_sub10m <- db [,57, drop=F]
View(y_sub10m)
y_vis10m <- db [,56, drop=F]
y_vis10m
View(y_vis10m)
View(db)
d_exp <- db [,33, drop=F]
View(d_exp)
x <- as.matrix(db)[,-c(33,56,57)]
varnames <- colnames(db)
varnames
xnames <- varnames [-c(33,56,57)]
xnames
dandxnames <- varnames [-c(56,57)]
fmla <- as.formula (paste ("Outcome ~ ", paste(dandxnames, collapse= "+")))
ls.effect <- lm (fmla, data= db)
View(y_sub10m)
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
dandxnames
ls_effect_sub <- lm (fmla_sub, data= db) #esto no esta corriendo
class(db$SUB10MIL)
prueba <- lm (SUB10MIL ~ fmla_subols, data= db )
fmla_subols <- as.formula (paste(dandxnames, collapse= "+"))
dandxnames
fmla_subols <- as.formula (paste(dandxnames, collapse= "+"))
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
paste(dandxnames, collapse= "+"
ls_effect_sub <- lm (fmla_sub, data= db) #esto no esta corriendo
xnames <- varnames [-c(33,56,57)]
dandxnames <- varnames [-c(56,57)]
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db) #esto no esta corriendo
View(db)
View(db)
class(db$gpc)
class(db)
lapply(db, class)
as.factor (db$DEPARTAMENTO)
class (db$DEPARTAMENTO)
db <- db %>% mutate (DEPARTAMENTO= as.factor (db$DEPARTAMENTO))
class (db$DEPARTAMENTO)
db <- db %>% mutate (MUNICIPIO= as.factor (db$MUNICIPIO))
class (db$MUNICIPIO)
class (db$Aglomeración)
db <- db %>% mutate (Aglomeración= as.factor (db$Aglomeración))
class (db$Aglomeración)
db <- db %>% mutate (Ejesregionales= as.factor (db$Ejesregionales))
class (db$Ejesregionales)
View(db)
db <- subset (db, select = -c("municipio"))
drop <- c("municipio")
db <- db[,!(names(db) %in% drop)]
db <- db %>% mutate (AÑO_orig= as.factor (db$AÑO_orig))
class (db$AÑO_orig)
db <- db %>% mutate (AÑO_gen= as.factor (db$AÑO_gen))
class (db$AÑO_gen)
db <- db %>% mutate (AÑO_mod= as.factor (db$AÑO_mod))
class (db$AÑO_mod)
db <- db %>% mutate (AÑO_MVCT= as.factor (db$AÑO_MVCT))
class (db$AÑO_MVCT)
db <- db %>% mutate (ULT_POT= as.factor (db$ULT_POT))
class (db$ULT_POT)
db <- db %>% mutate (ano= as.factor (db$ano))
class (db$ano)
db <- db %>% mutate (Aglo= as.factor (db$Aglo))
class (db$Aglo)
dim(db)
y_sub10m <- db [,57, drop=F] #variable y de subsidios por cada 10mil habitantes
y_vis10m <- db [,56, drop=F] #variable y de vis por cada 10mil habitantes
d_exp <- db [,33, drop=F] #variable "tratamiento" (aumento suelo expansion)
x <- as.matrix(db)[,-c(33,56,57)] #matriz del resto de variables
y_sub10m <- db [,56, drop=F] #variable y de subsidios por cada 10mil habitantes
View(y_sub10m)
y_vis10m <- db [,55, drop=F] #variable y de vis por cada 10mil habitantes
View(y_vis10m)
d_exp <- db [,32, drop=F] #variable "tratamiento" (aumento suelo expansion)
View(d_exp)
d_exp <- db [,33, drop=F] #variable "tratamiento" (aumento suelo expansion)
View(d_exp)
x <- as.matrix(db)[,-c(33,55,56)] #matriz del resto de variables
varnames <- colnames(db)
xnames <- varnames [-c(33,55,56)]
dandxnames <- varnames [-c(55,56)]
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
class(db$SUB10MIL) #aparece numeric
fmla_subols <- as.formula (paste(dandxnames, collapse= "+"))
y_sub10m <- db [,56, drop=F] #variable y de subsidios por cada 10mil habitantes
y_vis10m <- db [,55, drop=F] #variable y de vis por cada 10mil habitantes
d_exp <- db [,33, drop=F] #variable "tratamiento" (aumento suelo expansion)
x <- as.matrix(db)[,-c(33,55,56,1,2)] #matriz del resto de variables #le elimino las variables 1 y 2 porque son id = multicolinearidad con municipios
varnames <- colnames(db)
xnames <- varnames [-c(33,55,56,1,2)]
dandxnames <- varnames [-c(55,56,1,2)]
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
view(db$SUB10MIL)
ls_effect_sub <- lm (fmla_sub, data= db) #esto no esta corriendo
sapply(lapply(db, unique), length)
drop <- c("ano")
db <- db[,!(names(db) %in% drop)]
y_sub10m <- db [,56, drop=F] #variable y de subsidios por cada 10mil habitantes
y_sub10m <- db [,55, drop=F] #variable y de subsidios por cada 10mil habitantes
y_vis10m <- db [,54, drop=F] #variable y de vis por cada 10mil habitantes
View(y_sub10m)
View(y_vis10m)
d_exp <- db [,33, drop=F] #variable "tratamiento" (aumento suelo expansion)
View(d_exp)
x <- as.matrix(db)[,-c(33,55,56,1,2)] #matriz del resto de variables #le elimino las variables 1 y 2 porque son id = multicolinearidad con municipios
varnames <- colnames(db)
xnames <- varnames [-c(33,55,56,1,2)]
dandxnames <- varnames [-c(55,56,1,2)]
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
xnames <- varnames [-c(33,54,55,1,2)]
dandxnames <- varnames [-c(55,54,1,2)]
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
sapply(lapply(db, unique), length)
fmla_sub <- as.formula (paste ("SUB10MIL ~ ", paste(dandxnames, collapse= "+")))
ls_effect_sub <- lm (fmla_sub, data= db)
which(sapply(db, function(x) length(unique(x))<2))
which(sapply(db, function(x) length(unique(x))<2))
ls_effect_sub <- lm (fmla_sub, data= db)
View(db)
d_exp
prueba <- lm (SUB10MIL ~ proporcionareaexpansion, data=db )
prueba
summary(prueba)
prueba <- lm (VIS10MIL ~ proporcionareaexpansion, data=db )
summary(prueba)
View(db)
prueba <- lm (VIS10MIL ~ proporcionareaexpansion,   subvis, Defhab2020, data=db   )
summary(prueba)
prueba <- lm (VIS10MIL ~ proporcionareaexpansion,   subvis, Defhab2020, data=db   )
summary(prueba)
prueba <- lm (VIS10MIL ~ proporcionareaexpansion,   subvis, Defhab2020, data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, Valorsuelo,  data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, Valorsuelo,  data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, nbi,  data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, nbi,  data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020,  data=db   )
summary(prueba2)
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, nbi data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, nbi, data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, Defhab2020, diskm, data=db   )
prueba2 <- lm (VIS10MIL ~ proporcionareaexpansion, subvis, diskm, data=db   )
summary(prueba2)
